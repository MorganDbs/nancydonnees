extends layout

block content
    style.
        #map {
          width: 100%;
          height: 500px;
        }
    .row
        .col-sm-12
            h2 Maps
            #map
            for event in eventDetails
                h2 Détails
                    h3= event.titre + ' (' + event.type + ')'
                    h4= event.adresse
                    h3 Description
                    div= event.description
                    h3 Date
                    div= 'Le ' + event.date + ' à ' + event.time + '.'
                    h3 Se garer
                    h4 En voiture
                    table.table.table-striped
                        thead
                            tr
                                th Nom
                                th Places libres
                                th Adresse
                                th Distance
                        tbody#parkingsvoiture

                    h4 En vélo
                    table.table.table-striped
                        thead
                            tr
                                th Nom
                                th Places libres
                                th Adresse
                                th Distance
                        tbody#parkingsvelo
                h2 Commentaires
                    br
                    br

                    .col-sm-12
                        for comment in comments
                            .panel.panel-default
                                .panel-heading
                                    h4= comment.name + ' '
                                        small(id=comment._id)
                                .panel-body
                                    h5= comment.contenu
                form.form-horizontal(action="/comment/add", method='POST')
                    if(auth)
                        input(type='hidden', name='_csrf', value=_csrf)
                        input(type='hidden', name='id_user', value=user._id)
                        if(user.profile.name)
                            input(type='hidden', name='user', value=user.profile.name)
                        else
                            input(type='hidden', name='user', value='Anonyme')
                        input(type='hidden', name='id_event', value=event._id)
                    textarea(class='form-control', rows="3", name="commentaire", required, placeholder="Votre commentaire...")
                    br
                    if !auth
                        button(type='submit', class='btn btn-primary' disabled="true") Commenter
                        br
                        br
                        div Merci de 
                            a(href="/signup") créer un compte 
                            ou de vous 
                            a(href="/login") connecter

                    else
                        button(type='submit', class='btn btn-primary') Commenter

    script.
        var comments =!{JSON.stringify(comments)};
            comments.forEach(function(comment){
                var date = comment.updatedAt.split('T')[0];
                var heure = comment.updatedAt.split('T')[1];
                date = date.split('-');
                date = date[2] + "/" + date[1] + "/" + date[0];
                heure = heure.split('.')[0];
                heure = parseInt(heure.split(':')[0])+1 + ':' + heure.split(':')[1] + ':' + heure.split(':')[2];
                date = 'Le ' + date + ' à ' + heure;
                document.getElementById(comment._id).innerHTML = date;
            });

    script.
        var event =!{JSON.stringify(eventDetails)};
        var parkings_voiture =!{JSON.stringify(parkings_voiture)};
        var parkings_velo =!{JSON.stringify(parkings_velo)};
        var parkings_voiture_proche = [];
        var parkings_velo_proche = [];


        event = event[0];
        function initMap() {

            var geocoder = new google.maps.Geocoder;

            geocoder.geocode( { 'address' : event.adresse }, function( results, status ) {
                if( status == google.maps.GeocoderStatus.OK ) {
                    switch(this.event.type){
                            case 'Rencontre':
                                icon = 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png';
                                break;
                            case 'Concert':
                                icon = 'http://maps.google.com/mapfiles/ms/icons/purple-dot.png';
                                break;
                            case 'Sport':
                                icon = 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png';
                                break;
                            case 'Convention':
                                icon = 'http://maps.google.com/mapfiles/ms/icons/green-dot.png';
                                break;

                        }

                    map = new google.maps.Map(document.getElementById('map'), {
                        center: results[0].geometry.location,
                        zoom: 16
                    });

                    var marker = new google.maps.Marker( {
                        map: map,
                        position: results[0].geometry.location,
                        icon: icon
                    } );

                    marker.addListener('click', function(){
                        infowindow.open(map, marker);
                    });


                    for(var i=0; i< parkings_voiture.length; i++){
                        var lieu = new google.maps.LatLng(parkings_voiture[i].coord.y, parkings_voiture[i].coord.x);
                        var event = results[0].geometry.location;
                        var distance = google.maps.geometry.spherical.computeDistanceBetween( lieu, event);
                        var res = { 'model': parkings_voiture[i], 'distance' : distance};
                        parkings_voiture_proche[i] = res;
                    }
                    parkings_voiture_proche.sort(function(a,b){
                        return a.distance - b.distance
                    })

                    parkings_voiture_proche.slice(0,3).forEach(function(parkings_voiture_proche){
                        var marker2 = new google.maps.Marker( {
                            map: map,
                            position: new google.maps.LatLng(parkings_voiture_proche.model.coord.y, parkings_voiture_proche.model.coord.x),
                            icon: 'https://maps.google.com/mapfiles/kml/shapes/parking_lot_maps.png'
                        } );

                        var complet = "";

                        if(parkings_voiture_proche.model.complet == 'false'){
                          complet = "Non";
                        }else{
                          complet = "Oui";
                        }

                        var places = "";
                        if(parkings_voiture_proche.model.places == null){
                          places = "Pas d'information";
                        }else{
                          places = parkings_voiture_proche.model.places;
                        }

                        var html = '<div>'
                            + '<h5>' + 'Nom : ' + parkings_voiture_proche.model.nom + '</h5>'
                            + '<h5>' + 'Adresse : ' + parkings_voiture_proche.model.adresse + '</h5>'
                            + '<h5>' + 'Places libres : ' + places + '</h5>'
                            + '<h5>' + 'Capacite : ' + parkings_voiture_proche.model.capacite + '</h5>'
                            + '<h5>' + 'Complet : ' + complet + '</h5>'
                            + '</div>';

                        var infoWindow2 = new google.maps.InfoWindow({
                            content: html
                        });

                        google.maps.event.addListener(marker2, 'click', function () {
                            infoWindow2.open(map, marker2);
                        });

                        var tabparking = '<tr>'
                            + '<td>' + parkings_voiture_proche.model.nom + '</td>'
                            + '<td>' + places + '</td>'
                            + '<td>' + parkings_voiture_proche.model.adresse + '</td>'
                            + '<td>' + Math.round(parkings_voiture_proche.distance)/1000 + ' km</td>'
                            + '</tr>';
                        document.getElementById('parkingsvoiture').innerHTML += tabparking;

                    })

                    var icon = {
                        path: 'M343.746,154.841c-12.696,0-24.804,2.558-35.842,7.18l-26.394-51.211h36.89c4.002,0,7.258,3.256,7.258,7.258 s-3.256,7.258-7.258,7.258h-7.871c-4.143,0-7.5,3.358-7.5,7.5s3.357,7.5,7.5,7.5h7.871c12.273,0,22.258-9.985,22.258-22.258 s-9.984-22.258-22.258-22.258h-49.192c-2.615,0-5.042,1.363-6.404,3.596c-1.361,2.233-1.461,5.015-0.263,7.34l13.125,25.467H167.423 l-10.92-21.403h17.269c4.143,0,7.5-3.358,7.5-7.5s-3.357-7.5-7.5-7.5h-49.193c-4.143,0-7.5,3.358-7.5,7.5s3.357,7.5,7.5,7.5h15.084 l14.576,28.568l-17.132,26.543c-13.113-7.065-28.101-11.08-44.011-11.08C41.763,154.841,0,196.603,0,247.936 c0,51.333,41.763,93.096,93.096,93.096c48.808,0,88.961-37.757,92.793-85.596h22.007l-8.549,27.818h-4.922 c-4.143,0-7.5,3.358-7.5,7.5s3.357,7.5,7.5,7.5h27c4.143,0,7.5-3.358,7.5-7.5s-3.357-7.5-7.5-7.5h-6.386l9.869-32.114l62.406-96.327 l7.269,14.103c-26.357,16.458-43.933,45.723-43.933,79.02c0,51.333,41.763,93.096,93.097,93.096 c51.333,0,93.096-41.763,93.096-93.096C436.842,196.603,395.079,154.841,343.746,154.841z M162.121,154.826l43.678,85.61h-19.911 c-2.162-26.985-15.882-50.758-36.193-66.359L162.121,154.826z M170.824,240.436h-63.96l34.661-53.699 C157.734,199.592,168.745,218.724,170.824,240.436z M93.096,326.032C50.033,326.032,15,290.999,15,247.936 c0-43.062,35.033-78.096,78.096-78.096c12.914,0,25.095,3.17,35.837,8.743l-42.139,65.285c-1.489,2.307-1.598,5.244-0.284,7.655 c1.313,2.411,3.84,3.912,6.586,3.912h77.728C167.036,294.992,133.628,326.032,93.096,326.032z M218.819,232.949l-43.743-85.737 h99.289L218.819,232.949z M343.746,326.032c-43.063,0-78.097-35.034-78.097-78.096c0-27.498,14.298-51.704,35.838-65.623 l35.592,69.059c1.332,2.583,3.954,4.065,6.673,4.065c1.157,0,2.331-0.269,3.43-0.835c3.683-1.897,5.129-6.42,3.231-10.103 l-35.603-69.079c8.956-3.586,18.714-5.581,28.936-5.581c43.063,0,78.096,35.034,78.096,78.096 C421.842,290.999,386.809,326.032,343.746,326.032z',
                        fillColor: 'black',
                        fillOpacity: 0.8,
                        scale: 0.1,
                        strokeColor: 'white',
                        strokeWeight: 0.4
                    };

                    for(var i=0; i< parkings_velo.length; i++){
                        var lieu = new google.maps.LatLng(parkings_velo[i].coord.x, parkings_velo[i].coord.y);
                        var event = results[0].geometry.location;
                        var distance = google.maps.geometry.spherical.computeDistanceBetween(lieu, event);
                        var res = { 'model': parkings_velo[i], 'distance' : distance};
                        parkings_velo_proche[i] = res;
                    }
                    parkings_velo_proche.sort(function(a,b){
                        return a.distance - b.distance
                    })

                    parkings_velo_proche.slice(0,3).forEach(function(parkings_velo_proche){
                        var marker3 = new google.maps.Marker( {
                            map: map,
                            position: new google.maps.LatLng(parkings_velo_proche.model.coord.x, parkings_velo_proche.model.coord.y),
                            icon: icon
                        } );

                        var ouvert ='oui';
                        if(parkings_velo_proche.model.ouvert!=1){
                          ouvert = "non";
                        }

                        var infoWindow3 = new google.maps.InfoWindow({
                            content: '<div>'
                            + '<h5>' + 'Nom : ' + parkings_velo_proche.model.nom + '</h5>'
                            + '<h5>' + 'Adresse : ' + parkings_velo_proche.model.adresse + '</h5>'
                            + '<h5>' + 'Places libres : ' + parkings_velo_proche.model.places_libres + '</h5>'
                            + '<h5>' + 'Vélos disponibles : ' + parkings_velo_proche.model.velos_disponibles + '</h5>'
                            + '<h5>' + 'Ouvert : ' + ouvert + '</h5>'
                            + '</div>'
                        });

                        google.maps.event.addListener(marker3, 'click', function () {
                            infoWindow3.open(map, marker3);
                        });

                        var tabparking = '<tr>'
                            + '<td>' + parkings_velo_proche.model.nom + '</td>'
                            + '<td>' + parkings_velo_proche.model.places_libres + '</td>'
                            + '<td>' + parkings_velo_proche.model.adresse + '</td>'
                            + '<td>' + Math.round(parkings_velo_proche.distance)/1000 + ' km</td>'
                            + '</tr>';

                        document.getElementById('parkingsvelo').innerHTML += tabparking;
                    })

                }
            } );



            var infowindow = new google.maps.InfoWindow({
                content: '<div>'
                + '<h5>' + 'Titre : ' + event.titre + '</h5>'
                + '<h5>' + 'Adresse : ' + event.adresse + '</h5>'
                + '<h5>' + 'Type : ' + event.type + '</h5>'
                + '</div>'
            });
        };


    script(src='https://maps.googleapis.com/maps/api/js?key=AIzaSyDID5uSKinSpuwtZAWRcu5Fz6bMjj9yNXA&libraries=geometry&callback=initMap')

